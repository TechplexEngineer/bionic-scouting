name: Development Build

on:
  workflow_dispatch:
  push:
    branches: # branches to run builds on
      - 'main'
      - 'master'
    paths-ignore: # do not run if these are the only files that have changed
      - README.md
      - .gitignore
      - docs/**
      - tools/**

jobs:
  development-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # include tags for semantic-version

      - name: Install NPM Deps
        run: |
          npm ci

      - name: Build Svelte App
        run: |
          npm run build

      - name: Copy built assets to android folder
        run: |
          npx cap sync

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Decode Keystore
        run: |
          which base64
          command base64
          echo "${{ secrets.SIGNING_KEYSTORE_B64 }}" | base64 -d > keystore.jks

      - uses: paulhatch/semantic-version@v4.0.2
        id: version
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          #"${major}.${minor}.${patch}-prerelease${increment}"
          format: "${major}.${minor}.${patch}-pre${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          # namespace: my-service
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false

      - name: Build and Sign App
        env:
          SIGNING_STORE_PASSWORD: ${{secrets.SIGNING_STORE_PASSWORD}}
          SIGNING_KEY_PASSWORD: ${{secrets.SIGNING_KEY_PASSWORD}}
        run: |
          cd android
          ./gradlew bundleRelease \
            -PversionName=${{ steps.version.outputs.version }} \
            -PversionNumber=$(date '+%s')
          #keystore.jks is expected to be in root of project

      - name: Annotate Version
        run: |
          echo "::notice title=Version::${{ steps.version.outputs.version }}"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build Artifacts
          path: android/app/build/outputs/

      - name: Get PackageName
        id: pkg
        run: |
          packageName=$(awk -F "=" '/applicationId/ {print $2}' android/gradle.properties)
          echo "Package Name is: ${packageName}"
          echo "::set-output name=name::${packageName}"

      - name: Move bundle to repo root
        run: |
          mkdir -p aab
          cp android/app/build/outputs/bundle/release/*.aab aab/ 

      - name: Upload to Google Play Alpha
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: "${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}"
          packageName: "${{ steps.pkg.outputs.name }}"
          releaseFiles: aab/*.aab
          track: internal
          inAppUpdatePriority: 5 # [0,5] with 5 being the highest priority
      #          userFraction: 0.33
      #          whatsNewDirectory: distribution/whatsnew
      #          mappingFile: app/build/outputs/mapping/release/mapping.txt

      - name: Configure Identity for GH Pages Publish
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Change Branch
        run: git switch gh-pages

      #      - name: Preserve CNAME & Copy new files
      #        run: |
      #          cp ./docs/CNAME .  # preserve CNAME
      #          rm -rf ./docs      # remove old files
      #          mv ./public ./docs # move new files into proper directory
      #          cp ./CNAME ./docs/ # restore CNAME

      - name: Commit and Publish
        run: |
          mv ./build docs
          git add ./docs
          git commit -m "Publishing site at ${GITHUB_SHA} - $(date)"
          remote_repo="https://${GITHUB_ACTOR}:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
          git push "${remote_repo}" HEAD:gh-pages
